const menuToggle=document.getElementById("menu-toggle"),mobileMenu=document.getElementById("mobile-menu"),menuOverlay=document.getElementById("menu-overlay"),menuIcon=document.getElementById("menu-icon"),closeIcon=document.getElementById("close-icon");function toggleMenu(){mobileMenu.classList.toggle("active"),menuOverlay.classList.toggle("active"),menuIcon.classList.toggle("hidden"),closeIcon.classList.toggle("hidden"),document.body.classList.toggle("overflow-hidden")}function initMap(){const map=L.map("map").setView([6.6973,-1.6816],17);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}).addTo(map);const markers=[{position:[6.6885,-1.6244],type:"faculty",title:"Faculty of Technical Education",icon:"./public/icons/faculties.png"},{position:[6.688,-1.624],type:"hostel",title:"Student Hostel",icon:"./public/icons/hostels.png"},{position:[6.689,-1.625],type:"eateries",title:"Campus Restaurant",icon:"./public/icons/eatries.png"},{position:[6.6875,-1.6235],type:"atm",title:"Campus ATM",icon:"./public/icons/atm.png"}].map((location=>{const customIcon=L.icon({iconUrl:location.icon,iconSize:[32,32]}),marker=L.marker(location.position,{icon:customIcon,title:location.title}).addTo(map);return marker.bindPopup(`\n      <div class="p-2">\n        <h3 class="font-medium">${location.title}</h3>\n        <p class="text-gray-600">${location.type}</p>\n        <button onclick="routeTo(${location.position[0]}, ${location.position[1]})">\n          Route Here\n        </button>\n      </div>\n    `),{marker:marker,type:location.type}}));if(L.Control.Search){const searchControl=new L.Control.Search({layer:L.layerGroup(markers.map((({marker:marker})=>marker))),propertyName:"title",initial:!1,zoom:18});map.addControl(searchControl)}const filterButtons=document.querySelectorAll("button[data-filter]");filterButtons.forEach((button=>{button.addEventListener("click",(()=>{filterButtons.forEach((btn=>{btn===button?(btn.classList.remove("bg-white","text-gray-700","hover:bg-gray-50"),btn.classList.add("bg-[#6B001F]","text-white")):(btn.classList.remove("bg-[#6B001F]","text-white"),btn.classList.add("bg-white","text-gray-700","hover:bg-gray-50"))}));const filterType=button.dataset.filter;markers.forEach((({marker:marker,type:type})=>{"more"===filterType||type===filterType?(marker.setOpacity(1),marker.getElement()&&(marker.getElement().style.pointerEvents="auto")):(marker.setOpacity(0),marker.getElement()&&(marker.getElement().style.pointerEvents="none"))}))}))}))}function routeTo(lat,lng){navigator.geolocation?navigator.geolocation.getCurrentPosition((position=>{const start=L.latLng(position.coords.latitude,position.coords.longitude),end=L.latLng(lat,lng);alert("Routing from "+start.toString()+" to "+end.toString())}),(()=>{alert("Geolocation failed or denied.")})):alert("Geolocation is not supported by your browser.")}menuToggle.addEventListener("click",toggleMenu),menuOverlay.addEventListener("click",toggleMenu),window.addEventListener("resize",(()=>{window.innerWidth>=768&&mobileMenu.classList.contains("active")&&toggleMenu()}));const addLocationModal=document.getElementById("add-location-modal"),addLocationForm=document.getElementById("add-location-form"),addLocationBtn=document.getElementById("add-location-btn");function formatTime(time){return new Date(`2000-01-01T${time}`).toLocaleTimeString("en-US",{hour:"numeric",minute:"numeric",hour12:!0}).toLowerCase()}addLocationBtn&&addLocationBtn.addEventListener("click",(()=>{addLocationModal.classList.remove("hidden")})),document.getElementById("cancel-add").addEventListener("click",(()=>{addLocationModal.classList.add("hidden"),addLocationForm.reset()})),addLocationForm.addEventListener("submit",(e=>{e.preventDefault();const name=document.getElementById("location-name").value,category=document.getElementById("location-category").value,wing=document.getElementById("location-wing").value,openTime=document.getElementById("opening-time").value,closeTime=document.getElementById("closing-time").value,newLocation=document.createElement("div");newLocation.className="location-item bg-white rounded-lg shadow-sm border mb-3 hover:shadow transition-shadow relative",newLocation.innerHTML=`\n    <div class="flex items-start gap-3 p-3">\n      <img src="./public/icons/default-location.png" alt="${name}" class="w-20 h-20 object-cover rounded-lg"/>\n      <div class="flex-1">\n        <div class="flex justify-between items-start">\n          <div>\n            <h3 class="text-base font-medium">${name}</h3>\n            <p class="text-sm text-gray-500">${category} â€¢ ${wing}</p>\n          </div>\n          <div class="flex items-center">\n            <div class="flex">\n              <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">\n                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>\n              </svg>\n              <span class="ml-1 text-xs font-medium">New</span>\n            </div>\n          </div>\n        </div>\n        <p class="text-xs text-gray-500 mt-1">Opens from ${formatTime(openTime)} - ${formatTime(closeTime)}</p>\n      </div>\n    </div>\n  `;const locationsList=document.querySelector(".location-list");locationsList&&locationsList.insertBefore(newLocation,locationsList.firstChild),addLocationForm.reset(),addLocationModal.classList.add("hidden")})),window.addEventListener("load",initMap);